# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type GameCommentSub {
  id: Int!
  title: String!
  createDate: DateTime!
  updateDate: DateTime!
  conetnts: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type GameComment {
  id: Int!
  title: String!
  createDate: DateTime!
  updateDate: DateTime!
  contents: String!
  subComments(id: Int!): [GameCommentSub]
}

type Tag {
  id: Int!
  title: String!
  createDate: DateTime!
  updateDate: DateTime!
  color: String!
  description: String!
}

type GameImage {
  id: Int!
  name: String!
  src: String!
}

type GameInformation {
  id: Int!
  howToPlay: String!
  benefit: String!
  availableSite: Site!
  standingStyle: StandingStyle!
  minNumberOfPeople: Int!
  maxNumberOfPeople: Int!
  minMinuteTaken: Int!
  maxMinuteTaken: Int!
}

enum Site {
  INDOOR
  OUTDOOR
  BOTH
}

enum StandingStyle {
  SEDENTARY
  STANDING
}

type Game {
  id: Int!
  title: String!
  createDate: DateTime!
  updateDate: DateTime!
  titleEmoji: String!
  gamename: String!
  summary: String!
  images: [GameImage]!
  information: GameInformation!
  comments: [GameComment]!
  reactions: [GameReaction]!
}

type GameReaction {
  id: Int!
  reactionEmoji: String!
}

type User {
  id: Int!
  loginId: String!
  nickname: String
  avatar: String
  role: String
  createDate: DateTime!
  updateDate: DateTime!
  reactions: [GameReaction]!
}

type Login {
  accessToken: String!
}

type Me {
  sub: String!
  loginId: String!
  userId: Int!
  role: Role!
}

enum Role {
  ADMIN
  GUEST
  EDITOR
}

type Query {
  login(loginId: String!, password: String!): Login!
  profile: Me!
  user(id: Int!): User
  users(pagination: PaginationDto!): [User!]
  game(id: Int!): Game
  games: [Game!]!
  comments(gameId: Int!): [GameComment]!
  comment(id: Int!): GameComment
  subComments(commentId: Int!): [GameCommentSub]
  reactions(gameId: Int!): [GameReaction!]!
  tag(id: Int!): Tag!
  tags: [Tag]!
}

input PaginationDto {
  skip: Int!
  take: Int!
}

type Mutation {
  createUser(data: CreateUserDto!): User!
  updateUser(data: UpdateUserDto!): User!
  deleteUser(id: Int!): Boolean!
  createGame(data: CreateGameDto!): Game!
  updateGame(data: UpdateGameDto!): Game!
  deleteGame(id: Int!): Boolean!
  addGameTag(gameId: Int!, tagId: Int!): Game!
  removeGameTag(gameId: Int!, tagId: Int!): Game!
  createComment(data: CreateCommentDto!): GameComment!
  updateComment(data: UpdateCommentDto!): GameComment!
  deleteComment(id: Int!): Boolean!
  createSubComment(data: CreateSubCommentDto!): GameCommentSub!
  updateSubComment(data: UpdateSubCommentDto!): GameCommentSub!
  deleteSubComment(id: Int!): Boolean!
  addGameReaction(gameId: Int!, tagId: Int!): GameReaction!
  removeGameReaction(id: Int!): GameReaction!
  createTag(data: CreateTagDto!): Tag!
  updateTag(data: UpdateTagDto!): Tag!
  deleteTag(id: Int!): Boolean!
}

input CreateUserDto {
  loginId: String!
  password: String!
  nickname: String
  avatar: String
}

input UpdateUserDto {
  password: String
  nickname: String
  avatar: String
  id: Int!
}

input CreateGameDto {
  title: String!
  titleEmoji: String!
  gamename: String!
  summary: String!
  tagIds: [Int!]!
  images: [CreateGameImageDto!]!
  information: CreateGameInformationDto!
}

input CreateGameImageDto {
  id: Int
  gameId: Int
  name: String!
  src: String!
}

input CreateGameInformationDto {
  howToPlay: String!
  benefit: String
  availableSite: Site
  standingStyle: StandingStyle
  minNumberOfPeople: Int!
  maxNumberOfPeople: Int!
  minMinuteTaken: Int!
  maxMinuteTaken: Int!
}

input UpdateGameDto {
  title: String
  titleEmoji: String
  summary: String
  information: CreateGameInformationDto
  id: Int!
  images: [UpdateGameImageDto!]!
  tags: [UpdateTagDto!]!
}

input UpdateGameImageDto {
  id: Int
  gameId: Int
  name: String!
  src: String!
}

input UpdateTagDto {
  title: String
  color: String
  description: String
  id: Float!
}

input CreateCommentDto {
  title: String!
  contents: String!
}

input UpdateCommentDto {
  title: String
  contents: String
  id: Float!
}

input CreateSubCommentDto {
  title: String!
  contents: String!
  commentId: Float!
}

input UpdateSubCommentDto {
  title: String
  contents: String
  commentId: Float
  id: Float!
}

input CreateTagDto {
  title: String!
  color: String!
  description: String!
}